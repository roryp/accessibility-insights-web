// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HighlightVisualization should return an empty fragment 1`] = `<React.Fragment />`;

exports[`HighlightVisualization should return highlight visualizations with default configuration 1`] = `
<React.Fragment>
  <ElementHighlight
    bodyStyle={
      Object {
        "height": "1",
      }
    }
    deps={
      Object {
        "drawerUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "clientWindowOffsetThreshold": 5,
          "dom": undefined,
        },
        "windowUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        },
      }
    }
    dialogRender={[Function]}
    docStyle={
      Object {
        "width": "1",
      }
    }
    drawerConfig={
      Object {
        "borderColor": "rgb(255, 255, 255)",
        "outlineStyle": "solid",
        "showVisualization": true,
        "textBoxConfig": Object {
          "background": "#FFFFFF",
          "boxWidth": "2em",
          "fontColor": "rgb(255, 255, 255)",
          "text": null,
        },
      }
    }
    element={Object {}}
    elementResult={
      Object {
        "target": Array [
          "some target",
        ],
        "targetIndex": 0,
      }
    }
    featureFlagStoreData={Object {}}
  />
  <ElementHighlight
    bodyStyle={
      Object {
        "height": "1",
      }
    }
    deps={
      Object {
        "drawerUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "clientWindowOffsetThreshold": 5,
          "dom": undefined,
        },
        "windowUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        },
      }
    }
    dialogRender={[Function]}
    docStyle={
      Object {
        "width": "1",
      }
    }
    drawerConfig={
      Object {
        "borderColor": "rgb(255, 255, 255)",
        "outlineStyle": "solid",
        "showVisualization": true,
        "textBoxConfig": Object {
          "background": "#FFFFFF",
          "boxWidth": "2em",
          "fontColor": "rgb(255, 255, 255)",
          "text": null,
        },
      }
    }
    element={Object {}}
    elementResult={
      Object {
        "target": Array [
          "some target",
        ],
        "targetIndex": 0,
      }
    }
    featureFlagStoreData={Object {}}
  />
</React.Fragment>
`;

exports[`HighlightVisualization should return highlight visualizations with formatter configuration 1`] = `
<React.Fragment>
  <ElementHighlight
    bodyStyle={
      Object {
        "height": "1",
      }
    }
    deps={
      Object {
        "drawerUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "clientWindowOffsetThreshold": 5,
          "dom": undefined,
        },
        "windowUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        },
      }
    }
    dialogRender={[Function]}
    docStyle={
      Object {
        "width": "1",
      }
    }
    drawerConfig={
      Object {
        "getBoundingRect": [Function],
      }
    }
    element={Object {}}
    elementResult={
      Object {
        "target": Array [
          "some target",
        ],
        "targetIndex": 0,
      }
    }
    featureFlagStoreData={Object {}}
    getBoundingRect={[Function]}
  />
  <ElementHighlight
    bodyStyle={
      Object {
        "height": "1",
      }
    }
    deps={
      Object {
        "drawerUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
          "clientWindowOffsetThreshold": 5,
          "dom": undefined,
        },
        "windowUtils": proxy {
          "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
        },
      }
    }
    dialogRender={[Function]}
    docStyle={
      Object {
        "width": "1",
      }
    }
    drawerConfig={
      Object {
        "getBoundingRect": [Function],
      }
    }
    element={Object {}}
    elementResult={
      Object {
        "target": Array [
          "some target",
        ],
        "targetIndex": 0,
      }
    }
    featureFlagStoreData={Object {}}
    getBoundingRect={[Function]}
  />
</React.Fragment>
`;
