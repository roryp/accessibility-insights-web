// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false, "shadowDialog": false} 1`] = `
<StyledWithResponsiveMode
  dialogContentProps={
    Object {
      "showCloseButton": false,
      "styles": Object {
        "title": "insights-dialog-title",
      },
      "topButtonsProps": Array [
        Object {
          "ariaLabel": "Close",
          "onClick": [Function],
          "onRenderIcon": [Function],
        },
      ],
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    Object {
      "containerClassName": "insights-dialog-main-override insights-dialog-main-container",
      "isBlocking": false,
      "layerProps": Object {
        "hostId": "insights-dialog-layer-host",
        "onLayerDidMount": [Function],
      },
    }
  }
  onDismiss={[Function]}
  title="help"
>
  <div
    className="insights-dialog-content"
  >
    <section
      aria-labelledby="rule-name"
      className="insights-dialog-rule-name"
    >
      <h3
        className="insights-dialog-section-title"
        id="rule-name"
      >
        Rule name
      </h3>
      <NewTabLink
        href="http://extension/help-relative"
      >
        ruleId
      </NewTabLink>
    </section>
    <section
      aria-labelledby="success-criteria"
      className="insights-dialog-success-criteria"
    >
      <h3
        className="insights-dialog-section-title"
        id="success-criteria"
      >
        Success criterion
      </h3>
      <div>
        <GuidanceLinks
          links={
            Array [
              Object {
                "href": "http://example.com",
                "text": "Guidance Link",
              },
            ]
          }
        />
      </div>
    </section>
    <section
      className="insights-dialog-path-selector-container"
    >
      <h3
        className="insights-dialog-section-title"
      >
        Path
      </h3>
      ruleId
    </section>
    <CommandBar
      currentRuleIndex={0}
      deps={
        Object {
          "browserAdapter": Object {
            "getUrl": [Function],
          },
          "issueDetailsTextGenerator": null,
          "issueFilingActionMessageCreator": null,
          "targetPageActionMessageCreator": Object {
            "copyIssueDetailsClicked": [Function],
          },
          "windowUtils": null,
        }
      }
      devToolsShortcut="shortcut"
      failedRules={
        Object {
          "ruleId": Object {
            "all": Array [],
            "any": Array [],
            "failureSummary": "failureSummary",
            "guidanceLinks": Array [
              Object {
                "href": "http://example.com",
                "text": "Guidance Link",
              },
            ],
            "help": "help",
            "helpUrl": "help-relative",
            "html": "html",
            "id": "id1",
            "none": Array [],
            "ruleId": "ruleId",
            "selector": "selector",
            "status": false,
          },
        }
      }
      onClickCopyIssueDetailsButton={[Function]}
      onClickInspectButton={[Function]}
      shouldShowInspectButtonMessage={[Function]}
    />
    <div
      className="insights-dialog-fix-instruction-container"
    >
      <FixInstructionPanel
        checkType={0}
        checks={Array []}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        renderTitleElement={[Function]}
      />
      <FixInstructionPanel
        checkType={1}
        checks={Array []}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        renderTitleElement={[Function]}
      />
    </div>
    <IssueDetailsNavigationControls
      container={
        DetailsDialog {
          "componentDidMount": [Function],
          "componentWillUnmount": [Function],
          "context": Object {},
          "isBackButtonDisabled": [Function],
          "isInspectButtonDisabled": [Function],
          "isNextButtonDisabled": [Function],
          "onClickBackButton": [Function],
          "onClickInspectButton": [Function],
          "onClickNextButton": [Function],
          "onHideDialog": [Function],
          "onLayoutDidMount": [Function],
          "props": Object {
            "deps": Object {
              "browserAdapter": Object {
                "getUrl": [Function],
              },
              "issueDetailsTextGenerator": null,
              "issueFilingActionMessageCreator": null,
              "targetPageActionMessageCreator": Object {
                "copyIssueDetailsClicked": [Function],
              },
              "windowUtils": null,
            },
            "devToolActionMessageCreator": Object {},
            "devToolStore": Object {},
            "devToolsShortcut": "shortcut",
            "dialogHandler": Object {
              "componentDidMount": [Function],
              "getFailureInfo": [Function],
              "getRuleUrl": [Function],
              "isBackButtonDisabled": [Function],
              "isInspectButtonDisabled": [Function],
              "isNextButtonDisabled": [Function],
              "shouldShowInspectButtonMessage": [Function],
            },
            "elementSelector": "ruleId",
            "failedRules": Object {
              "ruleId": Object {
                "all": Array [],
                "any": Array [],
                "failureSummary": "failureSummary",
                "guidanceLinks": Array [
                  Object {
                    "href": "http://example.com",
                    "text": "Guidance Link",
                  },
                ],
                "help": "help",
                "helpUrl": "help-relative",
                "html": "html",
                "id": "id1",
                "none": Array [],
                "ruleId": "ruleId",
                "selector": "selector",
                "status": false,
              },
            },
            "featureFlagStoreData": Object {
              "shadowDialog": false,
            },
            "target": Array [],
            "userConfigStore": Object {
              "getState": [Function],
            },
          },
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "canInspect": true,
            "currentRuleIndex": 0,
            "showDialog": true,
            "showInspectMessage": false,
            "userConfigurationStoreData": undefined,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_didScheduleRenderPhaseUpdate": false,
              "_dispatcher": Object {
                "readContext": [Function],
                "useCallback": [Function],
                "useContext": [Function],
                "useDebugValue": [Function],
                "useDeferredValue": [Function],
                "useEffect": [Function],
                "useImperativeHandle": [Function],
                "useLayoutEffect": [Function],
                "useMemo": [Function],
                "useReducer": [Function],
                "useRef": [Function],
                "useResponder": [Function],
                "useState": [Function],
                "useTransition": [Function],
              },
              "_element": <DetailsDialog
                deps={
                  Object {
                    "browserAdapter": Object {
                      "getUrl": [Function],
                    },
                    "issueDetailsTextGenerator": null,
                    "issueFilingActionMessageCreator": null,
                    "targetPageActionMessageCreator": Object {
                      "copyIssueDetailsClicked": [Function],
                    },
                    "windowUtils": null,
                  }
                }
                devToolActionMessageCreator={Object {}}
                devToolStore={Object {}}
                devToolsShortcut="shortcut"
                dialogHandler={
                  Object {
                    "componentDidMount": [Function],
                    "getFailureInfo": [Function],
                    "getRuleUrl": [Function],
                    "isBackButtonDisabled": [Function],
                    "isInspectButtonDisabled": [Function],
                    "isNextButtonDisabled": [Function],
                    "shouldShowInspectButtonMessage": [Function],
                  }
                }
                elementSelector="ruleId"
                failedRules={
                  Object {
                    "ruleId": Object {
                      "all": Array [],
                      "any": Array [],
                      "failureSummary": "failureSummary",
                      "guidanceLinks": Array [
                        Object {
                          "href": "http://example.com",
                          "text": "Guidance Link",
                        },
                      ],
                      "help": "help",
                      "helpUrl": "help-relative",
                      "html": "html",
                      "id": "id1",
                      "none": Array [],
                      "ruleId": "ruleId",
                      "selector": "selector",
                      "status": false,
                    },
                  }
                }
                featureFlagStoreData={
                  Object {
                    "shadowDialog": false,
                  }
                }
                target={Array []}
                userConfigStore={
                  Object {
                    "getState": [Function],
                  }
                }
              />,
              "_firstWorkInProgressHook": null,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_isReRender": false,
              "_newState": null,
              "_numberOfReRenders": 0,
              "_renderPhaseUpdates": null,
              "_rendered": <StyledWithResponsiveMode
                dialogContentProps={
                  Object {
                    "showCloseButton": false,
                    "styles": Object {
                      "title": "insights-dialog-title",
                    },
                    "topButtonsProps": Array [
                      Object {
                        "ariaLabel": "Close",
                        "onClick": [Function],
                        "onRenderIcon": [Function],
                      },
                    ],
                    "type": 0,
                  }
                }
                hidden={false}
                modalProps={
                  Object {
                    "containerClassName": "insights-dialog-main-override insights-dialog-main-container",
                    "isBlocking": false,
                    "layerProps": Object {
                      "hostId": "insights-dialog-layer-host",
                      "onLayerDidMount": [Function],
                    },
                  }
                }
                onDismiss={[Function]}
                title="help"
              >
                <div
                  className="insights-dialog-content"
                >
                  <section
                    aria-labelledby="rule-name"
                    className="insights-dialog-rule-name"
                  >
                    <h3
                      className="insights-dialog-section-title"
                      id="rule-name"
                    >
                      Rule name
                    </h3>
                    <NewTabLink
                      href="http://extension/help-relative"
                    >
                      ruleId
                    </NewTabLink>
                  </section>
                  <section
                    aria-labelledby="success-criteria"
                    className="insights-dialog-success-criteria"
                  >
                    <h3
                      className="insights-dialog-section-title"
                      id="success-criteria"
                    >
                      Success criterion
                    </h3>
                    <div>
                      <GuidanceLinks
                        links={
                          Array [
                            Object {
                              "href": "http://example.com",
                              "text": "Guidance Link",
                            },
                          ]
                        }
                      />
                    </div>
                  </section>
                  <section
                    className="insights-dialog-path-selector-container"
                  >
                    <h3
                      className="insights-dialog-section-title"
                    >
                      Path
                    </h3>
                    ruleId
                  </section>
                  <CommandBar
                    currentRuleIndex={0}
                    deps={
                      Object {
                        "browserAdapter": Object {
                          "getUrl": [Function],
                        },
                        "issueDetailsTextGenerator": null,
                        "issueFilingActionMessageCreator": null,
                        "targetPageActionMessageCreator": Object {
                          "copyIssueDetailsClicked": [Function],
                        },
                        "windowUtils": null,
                      }
                    }
                    devToolsShortcut="shortcut"
                    failedRules={
                      Object {
                        "ruleId": Object {
                          "all": Array [],
                          "any": Array [],
                          "failureSummary": "failureSummary",
                          "guidanceLinks": Array [
                            Object {
                              "href": "http://example.com",
                              "text": "Guidance Link",
                            },
                          ],
                          "help": "help",
                          "helpUrl": "help-relative",
                          "html": "html",
                          "id": "id1",
                          "none": Array [],
                          "ruleId": "ruleId",
                          "selector": "selector",
                          "status": false,
                        },
                      }
                    }
                    onClickCopyIssueDetailsButton={[Function]}
                    onClickInspectButton={[Function]}
                    shouldShowInspectButtonMessage={[Function]}
                  />
                  <div
                    className="insights-dialog-fix-instruction-container"
                  >
                    <FixInstructionPanel
                      checkType={0}
                      checks={Array []}
                      deps={
                        Object {
                          "browserAdapter": Object {
                            "getUrl": [Function],
                          },
                          "issueDetailsTextGenerator": null,
                          "issueFilingActionMessageCreator": null,
                          "targetPageActionMessageCreator": Object {
                            "copyIssueDetailsClicked": [Function],
                          },
                          "windowUtils": null,
                        }
                      }
                      renderTitleElement={[Function]}
                    />
                    <FixInstructionPanel
                      checkType={1}
                      checks={Array []}
                      deps={
                        Object {
                          "browserAdapter": Object {
                            "getUrl": [Function],
                          },
                          "issueDetailsTextGenerator": null,
                          "issueFilingActionMessageCreator": null,
                          "targetPageActionMessageCreator": Object {
                            "copyIssueDetailsClicked": [Function],
                          },
                          "windowUtils": null,
                        }
                      }
                      renderTitleElement={[Function]}
                    />
                  </div>
                  <IssueDetailsNavigationControls
                    container={[Circular]}
                    dialogHandler={
                      Object {
                        "componentDidMount": [Function],
                        "getFailureInfo": [Function],
                        "getRuleUrl": [Function],
                        "isBackButtonDisabled": [Function],
                        "isInspectButtonDisabled": [Function],
                        "isNextButtonDisabled": [Function],
                        "shouldShowInspectButtonMessage": [Function],
                      }
                    }
                    failuresCount={1}
                    featureFlagStoreData={
                      Object {
                        "shadowDialog": false,
                      }
                    }
                  />
                </div>
              </StyledWithResponsiveMode>,
              "_rendering": false,
              "_updater": [Circular],
              "_workInProgressHook": null,
            },
          },
        }
      }
      dialogHandler={
        Object {
          "componentDidMount": [Function],
          "getFailureInfo": [Function],
          "getRuleUrl": [Function],
          "isBackButtonDisabled": [Function],
          "isInspectButtonDisabled": [Function],
          "isNextButtonDisabled": [Function],
          "shouldShowInspectButtonMessage": [Function],
        }
      }
      failuresCount={1}
      featureFlagStoreData={
        Object {
          "shadowDialog": false,
        }
      }
    />
  </div>
</StyledWithResponsiveMode>
`;

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false, "shadowDialog": false}: verify close button for non shadow dom 1`] = `<CancelIcon />`;

exports[`DetailsDialog renders with: {"expectedHelpUrl": "http://extension/help-relative", "helpUrl": "help-relative", "isDevToolsOpen": false, "shadowDialog": false}: verify initial state 1`] = `
Object {
  "canInspect": true,
  "currentRuleIndex": 0,
  "showDialog": true,
  "showInspectMessage": false,
  "userConfigurationStoreData": undefined,
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false, "shadowDialog": false} 1`] = `
<StyledWithResponsiveMode
  dialogContentProps={
    Object {
      "showCloseButton": false,
      "styles": Object {
        "title": "insights-dialog-title",
      },
      "topButtonsProps": Array [
        Object {
          "ariaLabel": "Close",
          "onClick": [Function],
          "onRenderIcon": [Function],
        },
      ],
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    Object {
      "containerClassName": "insights-dialog-main-override insights-dialog-main-container",
      "isBlocking": false,
      "layerProps": Object {
        "hostId": "insights-dialog-layer-host",
        "onLayerDidMount": [Function],
      },
    }
  }
  onDismiss={[Function]}
  title="help"
>
  <div
    className="insights-dialog-content"
  >
    <section
      aria-labelledby="rule-name"
      className="insights-dialog-rule-name"
    >
      <h3
        className="insights-dialog-section-title"
        id="rule-name"
      >
        Rule name
      </h3>
      <NewTabLink
        href="http://extension/help1"
      >
        ruleId
      </NewTabLink>
    </section>
    <section
      aria-labelledby="success-criteria"
      className="insights-dialog-success-criteria"
    >
      <h3
        className="insights-dialog-section-title"
        id="success-criteria"
      >
        Success criterion
      </h3>
      <div>
        <GuidanceLinks
          links={
            Array [
              Object {
                "href": "http://example.com",
                "text": "Guidance Link",
              },
            ]
          }
        />
      </div>
    </section>
    <section
      className="insights-dialog-path-selector-container"
    >
      <h3
        className="insights-dialog-section-title"
      >
        Path
      </h3>
      ruleId
    </section>
    <CommandBar
      currentRuleIndex={0}
      deps={
        Object {
          "browserAdapter": Object {
            "getUrl": [Function],
          },
          "issueDetailsTextGenerator": null,
          "issueFilingActionMessageCreator": null,
          "targetPageActionMessageCreator": Object {
            "copyIssueDetailsClicked": [Function],
          },
          "windowUtils": null,
        }
      }
      devToolsShortcut="shortcut"
      failedRules={
        Object {
          "ruleId": Object {
            "all": Array [],
            "any": Array [],
            "failureSummary": "failureSummary",
            "guidanceLinks": Array [
              Object {
                "href": "http://example.com",
                "text": "Guidance Link",
              },
            ],
            "help": "help",
            "helpUrl": "http://extension/help1",
            "html": "html",
            "id": "id1",
            "none": Array [],
            "ruleId": "ruleId",
            "selector": "selector",
            "status": false,
          },
        }
      }
      onClickCopyIssueDetailsButton={[Function]}
      onClickInspectButton={[Function]}
      shouldShowInspectButtonMessage={[Function]}
    />
    <div
      className="insights-dialog-fix-instruction-container"
    >
      <FixInstructionPanel
        checkType={0}
        checks={Array []}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        renderTitleElement={[Function]}
      />
      <FixInstructionPanel
        checkType={1}
        checks={Array []}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        renderTitleElement={[Function]}
      />
    </div>
    <IssueDetailsNavigationControls
      container={
        DetailsDialog {
          "componentDidMount": [Function],
          "componentWillUnmount": [Function],
          "context": Object {},
          "isBackButtonDisabled": [Function],
          "isInspectButtonDisabled": [Function],
          "isNextButtonDisabled": [Function],
          "onClickBackButton": [Function],
          "onClickInspectButton": [Function],
          "onClickNextButton": [Function],
          "onHideDialog": [Function],
          "onLayoutDidMount": [Function],
          "props": Object {
            "deps": Object {
              "browserAdapter": Object {
                "getUrl": [Function],
              },
              "issueDetailsTextGenerator": null,
              "issueFilingActionMessageCreator": null,
              "targetPageActionMessageCreator": Object {
                "copyIssueDetailsClicked": [Function],
              },
              "windowUtils": null,
            },
            "devToolActionMessageCreator": Object {},
            "devToolStore": Object {},
            "devToolsShortcut": "shortcut",
            "dialogHandler": Object {
              "componentDidMount": [Function],
              "getFailureInfo": [Function],
              "getRuleUrl": [Function],
              "isBackButtonDisabled": [Function],
              "isInspectButtonDisabled": [Function],
              "isNextButtonDisabled": [Function],
              "shouldShowInspectButtonMessage": [Function],
            },
            "elementSelector": "ruleId",
            "failedRules": Object {
              "ruleId": Object {
                "all": Array [],
                "any": Array [],
                "failureSummary": "failureSummary",
                "guidanceLinks": Array [
                  Object {
                    "href": "http://example.com",
                    "text": "Guidance Link",
                  },
                ],
                "help": "help",
                "helpUrl": "http://extension/help1",
                "html": "html",
                "id": "id1",
                "none": Array [],
                "ruleId": "ruleId",
                "selector": "selector",
                "status": false,
              },
            },
            "featureFlagStoreData": Object {
              "shadowDialog": false,
            },
            "target": Array [],
            "userConfigStore": Object {
              "getState": [Function],
            },
          },
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "canInspect": true,
            "currentRuleIndex": 0,
            "showDialog": true,
            "showInspectMessage": false,
            "userConfigurationStoreData": undefined,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_didScheduleRenderPhaseUpdate": false,
              "_dispatcher": Object {
                "readContext": [Function],
                "useCallback": [Function],
                "useContext": [Function],
                "useDebugValue": [Function],
                "useDeferredValue": [Function],
                "useEffect": [Function],
                "useImperativeHandle": [Function],
                "useLayoutEffect": [Function],
                "useMemo": [Function],
                "useReducer": [Function],
                "useRef": [Function],
                "useResponder": [Function],
                "useState": [Function],
                "useTransition": [Function],
              },
              "_element": <DetailsDialog
                deps={
                  Object {
                    "browserAdapter": Object {
                      "getUrl": [Function],
                    },
                    "issueDetailsTextGenerator": null,
                    "issueFilingActionMessageCreator": null,
                    "targetPageActionMessageCreator": Object {
                      "copyIssueDetailsClicked": [Function],
                    },
                    "windowUtils": null,
                  }
                }
                devToolActionMessageCreator={Object {}}
                devToolStore={Object {}}
                devToolsShortcut="shortcut"
                dialogHandler={
                  Object {
                    "componentDidMount": [Function],
                    "getFailureInfo": [Function],
                    "getRuleUrl": [Function],
                    "isBackButtonDisabled": [Function],
                    "isInspectButtonDisabled": [Function],
                    "isNextButtonDisabled": [Function],
                    "shouldShowInspectButtonMessage": [Function],
                  }
                }
                elementSelector="ruleId"
                failedRules={
                  Object {
                    "ruleId": Object {
                      "all": Array [],
                      "any": Array [],
                      "failureSummary": "failureSummary",
                      "guidanceLinks": Array [
                        Object {
                          "href": "http://example.com",
                          "text": "Guidance Link",
                        },
                      ],
                      "help": "help",
                      "helpUrl": "http://extension/help1",
                      "html": "html",
                      "id": "id1",
                      "none": Array [],
                      "ruleId": "ruleId",
                      "selector": "selector",
                      "status": false,
                    },
                  }
                }
                featureFlagStoreData={
                  Object {
                    "shadowDialog": false,
                  }
                }
                target={Array []}
                userConfigStore={
                  Object {
                    "getState": [Function],
                  }
                }
              />,
              "_firstWorkInProgressHook": null,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_isReRender": false,
              "_newState": null,
              "_numberOfReRenders": 0,
              "_renderPhaseUpdates": null,
              "_rendered": <StyledWithResponsiveMode
                dialogContentProps={
                  Object {
                    "showCloseButton": false,
                    "styles": Object {
                      "title": "insights-dialog-title",
                    },
                    "topButtonsProps": Array [
                      Object {
                        "ariaLabel": "Close",
                        "onClick": [Function],
                        "onRenderIcon": [Function],
                      },
                    ],
                    "type": 0,
                  }
                }
                hidden={false}
                modalProps={
                  Object {
                    "containerClassName": "insights-dialog-main-override insights-dialog-main-container",
                    "isBlocking": false,
                    "layerProps": Object {
                      "hostId": "insights-dialog-layer-host",
                      "onLayerDidMount": [Function],
                    },
                  }
                }
                onDismiss={[Function]}
                title="help"
              >
                <div
                  className="insights-dialog-content"
                >
                  <section
                    aria-labelledby="rule-name"
                    className="insights-dialog-rule-name"
                  >
                    <h3
                      className="insights-dialog-section-title"
                      id="rule-name"
                    >
                      Rule name
                    </h3>
                    <NewTabLink
                      href="http://extension/help1"
                    >
                      ruleId
                    </NewTabLink>
                  </section>
                  <section
                    aria-labelledby="success-criteria"
                    className="insights-dialog-success-criteria"
                  >
                    <h3
                      className="insights-dialog-section-title"
                      id="success-criteria"
                    >
                      Success criterion
                    </h3>
                    <div>
                      <GuidanceLinks
                        links={
                          Array [
                            Object {
                              "href": "http://example.com",
                              "text": "Guidance Link",
                            },
                          ]
                        }
                      />
                    </div>
                  </section>
                  <section
                    className="insights-dialog-path-selector-container"
                  >
                    <h3
                      className="insights-dialog-section-title"
                    >
                      Path
                    </h3>
                    ruleId
                  </section>
                  <CommandBar
                    currentRuleIndex={0}
                    deps={
                      Object {
                        "browserAdapter": Object {
                          "getUrl": [Function],
                        },
                        "issueDetailsTextGenerator": null,
                        "issueFilingActionMessageCreator": null,
                        "targetPageActionMessageCreator": Object {
                          "copyIssueDetailsClicked": [Function],
                        },
                        "windowUtils": null,
                      }
                    }
                    devToolsShortcut="shortcut"
                    failedRules={
                      Object {
                        "ruleId": Object {
                          "all": Array [],
                          "any": Array [],
                          "failureSummary": "failureSummary",
                          "guidanceLinks": Array [
                            Object {
                              "href": "http://example.com",
                              "text": "Guidance Link",
                            },
                          ],
                          "help": "help",
                          "helpUrl": "http://extension/help1",
                          "html": "html",
                          "id": "id1",
                          "none": Array [],
                          "ruleId": "ruleId",
                          "selector": "selector",
                          "status": false,
                        },
                      }
                    }
                    onClickCopyIssueDetailsButton={[Function]}
                    onClickInspectButton={[Function]}
                    shouldShowInspectButtonMessage={[Function]}
                  />
                  <div
                    className="insights-dialog-fix-instruction-container"
                  >
                    <FixInstructionPanel
                      checkType={0}
                      checks={Array []}
                      deps={
                        Object {
                          "browserAdapter": Object {
                            "getUrl": [Function],
                          },
                          "issueDetailsTextGenerator": null,
                          "issueFilingActionMessageCreator": null,
                          "targetPageActionMessageCreator": Object {
                            "copyIssueDetailsClicked": [Function],
                          },
                          "windowUtils": null,
                        }
                      }
                      renderTitleElement={[Function]}
                    />
                    <FixInstructionPanel
                      checkType={1}
                      checks={Array []}
                      deps={
                        Object {
                          "browserAdapter": Object {
                            "getUrl": [Function],
                          },
                          "issueDetailsTextGenerator": null,
                          "issueFilingActionMessageCreator": null,
                          "targetPageActionMessageCreator": Object {
                            "copyIssueDetailsClicked": [Function],
                          },
                          "windowUtils": null,
                        }
                      }
                      renderTitleElement={[Function]}
                    />
                  </div>
                  <IssueDetailsNavigationControls
                    container={[Circular]}
                    dialogHandler={
                      Object {
                        "componentDidMount": [Function],
                        "getFailureInfo": [Function],
                        "getRuleUrl": [Function],
                        "isBackButtonDisabled": [Function],
                        "isInspectButtonDisabled": [Function],
                        "isNextButtonDisabled": [Function],
                        "shouldShowInspectButtonMessage": [Function],
                      }
                    }
                    failuresCount={1}
                    featureFlagStoreData={
                      Object {
                        "shadowDialog": false,
                      }
                    }
                  />
                </div>
              </StyledWithResponsiveMode>,
              "_rendering": false,
              "_updater": [Circular],
              "_workInProgressHook": null,
            },
          },
        }
      }
      dialogHandler={
        Object {
          "componentDidMount": [Function],
          "getFailureInfo": [Function],
          "getRuleUrl": [Function],
          "isBackButtonDisabled": [Function],
          "isInspectButtonDisabled": [Function],
          "isNextButtonDisabled": [Function],
          "shouldShowInspectButtonMessage": [Function],
        }
      }
      failuresCount={1}
      featureFlagStoreData={
        Object {
          "shadowDialog": false,
        }
      }
    />
  </div>
</StyledWithResponsiveMode>
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false, "shadowDialog": false}: verify close button for non shadow dom 1`] = `<CancelIcon />`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false, "shadowDialog": false}: verify initial state 1`] = `
Object {
  "canInspect": true,
  "currentRuleIndex": 0,
  "showDialog": true,
  "showInspectMessage": false,
  "userConfigurationStoreData": undefined,
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false, "shadowDialog": true} 1`] = `
<div
  className="insights-dialog-main-override-shadow"
  style={
    Object {
      "visibility": "visible",
    }
  }
>
  <div
    className="insights-dialog-container"
  >
    <div
      className="insights-dialog-header"
    >
      <p
        className="ms-Dialog-title insights-dialog-title"
      >
        help
      </p>
      <div
        className="ms-Dialog-topButton"
      >
        <button
          aria-label="Close"
          className="ms-Dialog-button ms-Dialog-button--close ms-Button ms-Button--icon insights-dialog-close"
          data-is-focusable="true"
          type="button"
        >
          <span
            className="ms-button-flex-container"
          >
            <CancelIcon />
          </span>
        </button>
      </div>
    </div>
    <div
      className="insights-dialog-content"
    >
      <section
        aria-labelledby="rule-name"
        className="insights-dialog-rule-name"
      >
        <h3
          className="insights-dialog-section-title"
          id="rule-name"
        >
          Rule name
        </h3>
        <NewTabLink
          href="http://extension/help1"
        >
          ruleId
        </NewTabLink>
      </section>
      <section
        aria-labelledby="success-criteria"
        className="insights-dialog-success-criteria"
      >
        <h3
          className="insights-dialog-section-title"
          id="success-criteria"
        >
          Success criterion
        </h3>
        <div>
          <GuidanceLinks
            links={
              Array [
                Object {
                  "href": "http://example.com",
                  "text": "Guidance Link",
                },
              ]
            }
          />
        </div>
      </section>
      <section
        className="insights-dialog-path-selector-container"
      >
        <h3
          className="insights-dialog-section-title"
        >
          Path
        </h3>
        ruleId
      </section>
      <CommandBar
        currentRuleIndex={0}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        devToolsShortcut="shortcut"
        failedRules={
          Object {
            "ruleId": Object {
              "all": Array [],
              "any": Array [],
              "failureSummary": "failureSummary",
              "guidanceLinks": Array [
                Object {
                  "href": "http://example.com",
                  "text": "Guidance Link",
                },
              ],
              "help": "help",
              "helpUrl": "http://extension/help1",
              "html": "html",
              "id": "id1",
              "none": Array [],
              "ruleId": "ruleId",
              "selector": "selector",
              "status": false,
            },
          }
        }
        onClickCopyIssueDetailsButton={[Function]}
        onClickInspectButton={null}
        shouldShowInspectButtonMessage={[Function]}
      />
      <div
        className="insights-dialog-fix-instruction-container"
      >
        <FixInstructionPanel
          checkType={0}
          checks={Array []}
          deps={
            Object {
              "browserAdapter": Object {
                "getUrl": [Function],
              },
              "issueDetailsTextGenerator": null,
              "issueFilingActionMessageCreator": null,
              "targetPageActionMessageCreator": Object {
                "copyIssueDetailsClicked": [Function],
              },
              "windowUtils": null,
            }
          }
          renderTitleElement={[Function]}
        />
        <FixInstructionPanel
          checkType={1}
          checks={Array []}
          deps={
            Object {
              "browserAdapter": Object {
                "getUrl": [Function],
              },
              "issueDetailsTextGenerator": null,
              "issueFilingActionMessageCreator": null,
              "targetPageActionMessageCreator": Object {
                "copyIssueDetailsClicked": [Function],
              },
              "windowUtils": null,
            }
          }
          renderTitleElement={[Function]}
        />
      </div>
      <IssueDetailsNavigationControls
        container={
          DetailsDialog {
            "componentDidMount": [Function],
            "componentWillUnmount": [Function],
            "context": Object {},
            "isBackButtonDisabled": [Function],
            "isInspectButtonDisabled": [Function],
            "isNextButtonDisabled": [Function],
            "onClickBackButton": [Function],
            "onClickInspectButton": [Function],
            "onClickNextButton": [Function],
            "onHideDialog": [Function],
            "onLayoutDidMount": [Function],
            "props": Object {
              "deps": Object {
                "browserAdapter": Object {
                  "getUrl": [Function],
                },
                "issueDetailsTextGenerator": null,
                "issueFilingActionMessageCreator": null,
                "targetPageActionMessageCreator": Object {
                  "copyIssueDetailsClicked": [Function],
                },
                "windowUtils": null,
              },
              "devToolActionMessageCreator": Object {},
              "devToolStore": Object {},
              "devToolsShortcut": "shortcut",
              "dialogHandler": Object {
                "componentDidMount": [Function],
                "getFailureInfo": [Function],
                "getRuleUrl": [Function],
                "isBackButtonDisabled": [Function],
                "isInspectButtonDisabled": [Function],
                "isNextButtonDisabled": [Function],
                "shouldShowInspectButtonMessage": [Function],
              },
              "elementSelector": "ruleId",
              "failedRules": Object {
                "ruleId": Object {
                  "all": Array [],
                  "any": Array [],
                  "failureSummary": "failureSummary",
                  "guidanceLinks": Array [
                    Object {
                      "href": "http://example.com",
                      "text": "Guidance Link",
                    },
                  ],
                  "help": "help",
                  "helpUrl": "http://extension/help1",
                  "html": "html",
                  "id": "id1",
                  "none": Array [],
                  "ruleId": "ruleId",
                  "selector": "selector",
                  "status": false,
                },
              },
              "featureFlagStoreData": Object {
                "shadowDialog": true,
              },
              "target": Array [],
              "userConfigStore": Object {
                "getState": [Function],
              },
            },
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "canInspect": true,
              "currentRuleIndex": 0,
              "showDialog": true,
              "showInspectMessage": false,
              "userConfigurationStoreData": undefined,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_didScheduleRenderPhaseUpdate": false,
                "_dispatcher": Object {
                  "readContext": [Function],
                  "useCallback": [Function],
                  "useContext": [Function],
                  "useDebugValue": [Function],
                  "useDeferredValue": [Function],
                  "useEffect": [Function],
                  "useImperativeHandle": [Function],
                  "useLayoutEffect": [Function],
                  "useMemo": [Function],
                  "useReducer": [Function],
                  "useRef": [Function],
                  "useResponder": [Function],
                  "useState": [Function],
                  "useTransition": [Function],
                },
                "_element": <DetailsDialog
                  deps={
                    Object {
                      "browserAdapter": Object {
                        "getUrl": [Function],
                      },
                      "issueDetailsTextGenerator": null,
                      "issueFilingActionMessageCreator": null,
                      "targetPageActionMessageCreator": Object {
                        "copyIssueDetailsClicked": [Function],
                      },
                      "windowUtils": null,
                    }
                  }
                  devToolActionMessageCreator={Object {}}
                  devToolStore={Object {}}
                  devToolsShortcut="shortcut"
                  dialogHandler={
                    Object {
                      "componentDidMount": [Function],
                      "getFailureInfo": [Function],
                      "getRuleUrl": [Function],
                      "isBackButtonDisabled": [Function],
                      "isInspectButtonDisabled": [Function],
                      "isNextButtonDisabled": [Function],
                      "shouldShowInspectButtonMessage": [Function],
                    }
                  }
                  elementSelector="ruleId"
                  failedRules={
                    Object {
                      "ruleId": Object {
                        "all": Array [],
                        "any": Array [],
                        "failureSummary": "failureSummary",
                        "guidanceLinks": Array [
                          Object {
                            "href": "http://example.com",
                            "text": "Guidance Link",
                          },
                        ],
                        "help": "help",
                        "helpUrl": "http://extension/help1",
                        "html": "html",
                        "id": "id1",
                        "none": Array [],
                        "ruleId": "ruleId",
                        "selector": "selector",
                        "status": false,
                      },
                    }
                  }
                  featureFlagStoreData={
                    Object {
                      "shadowDialog": true,
                    }
                  }
                  target={Array []}
                  userConfigStore={
                    Object {
                      "getState": [Function],
                    }
                  }
                />,
                "_firstWorkInProgressHook": null,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_isReRender": false,
                "_newState": null,
                "_numberOfReRenders": 0,
                "_renderPhaseUpdates": null,
                "_rendered": <div
                  className="insights-dialog-main-override-shadow"
                  style={
                    Object {
                      "visibility": "visible",
                    }
                  }
                >
                  <div
                    className="insights-dialog-container"
                  >
                    <div
                      className="insights-dialog-header"
                    >
                      <p
                        className="ms-Dialog-title insights-dialog-title"
                      >
                        help
                      </p>
                      <div
                        className="ms-Dialog-topButton"
                      >
                        <button
                          aria-label="Close"
                          className="ms-Dialog-button ms-Dialog-button--close ms-Button ms-Button--icon insights-dialog-close"
                          data-is-focusable="true"
                          type="button"
                        >
                          <span
                            className="ms-button-flex-container"
                          >
                            <CancelIcon />
                          </span>
                        </button>
                      </div>
                    </div>
                    <div
                      className="insights-dialog-content"
                    >
                      <section
                        aria-labelledby="rule-name"
                        className="insights-dialog-rule-name"
                      >
                        <h3
                          className="insights-dialog-section-title"
                          id="rule-name"
                        >
                          Rule name
                        </h3>
                        <NewTabLink
                          href="http://extension/help1"
                        >
                          ruleId
                        </NewTabLink>
                      </section>
                      <section
                        aria-labelledby="success-criteria"
                        className="insights-dialog-success-criteria"
                      >
                        <h3
                          className="insights-dialog-section-title"
                          id="success-criteria"
                        >
                          Success criterion
                        </h3>
                        <div>
                          <GuidanceLinks
                            links={
                              Array [
                                Object {
                                  "href": "http://example.com",
                                  "text": "Guidance Link",
                                },
                              ]
                            }
                          />
                        </div>
                      </section>
                      <section
                        className="insights-dialog-path-selector-container"
                      >
                        <h3
                          className="insights-dialog-section-title"
                        >
                          Path
                        </h3>
                        ruleId
                      </section>
                      <CommandBar
                        currentRuleIndex={0}
                        deps={
                          Object {
                            "browserAdapter": Object {
                              "getUrl": [Function],
                            },
                            "issueDetailsTextGenerator": null,
                            "issueFilingActionMessageCreator": null,
                            "targetPageActionMessageCreator": Object {
                              "copyIssueDetailsClicked": [Function],
                            },
                            "windowUtils": null,
                          }
                        }
                        devToolsShortcut="shortcut"
                        failedRules={
                          Object {
                            "ruleId": Object {
                              "all": Array [],
                              "any": Array [],
                              "failureSummary": "failureSummary",
                              "guidanceLinks": Array [
                                Object {
                                  "href": "http://example.com",
                                  "text": "Guidance Link",
                                },
                              ],
                              "help": "help",
                              "helpUrl": "http://extension/help1",
                              "html": "html",
                              "id": "id1",
                              "none": Array [],
                              "ruleId": "ruleId",
                              "selector": "selector",
                              "status": false,
                            },
                          }
                        }
                        onClickCopyIssueDetailsButton={[Function]}
                        onClickInspectButton={null}
                        shouldShowInspectButtonMessage={[Function]}
                      />
                      <div
                        className="insights-dialog-fix-instruction-container"
                      >
                        <FixInstructionPanel
                          checkType={0}
                          checks={Array []}
                          deps={
                            Object {
                              "browserAdapter": Object {
                                "getUrl": [Function],
                              },
                              "issueDetailsTextGenerator": null,
                              "issueFilingActionMessageCreator": null,
                              "targetPageActionMessageCreator": Object {
                                "copyIssueDetailsClicked": [Function],
                              },
                              "windowUtils": null,
                            }
                          }
                          renderTitleElement={[Function]}
                        />
                        <FixInstructionPanel
                          checkType={1}
                          checks={Array []}
                          deps={
                            Object {
                              "browserAdapter": Object {
                                "getUrl": [Function],
                              },
                              "issueDetailsTextGenerator": null,
                              "issueFilingActionMessageCreator": null,
                              "targetPageActionMessageCreator": Object {
                                "copyIssueDetailsClicked": [Function],
                              },
                              "windowUtils": null,
                            }
                          }
                          renderTitleElement={[Function]}
                        />
                      </div>
                      <IssueDetailsNavigationControls
                        container={[Circular]}
                        dialogHandler={
                          Object {
                            "componentDidMount": [Function],
                            "getFailureInfo": [Function],
                            "getRuleUrl": [Function],
                            "isBackButtonDisabled": [Function],
                            "isInspectButtonDisabled": [Function],
                            "isNextButtonDisabled": [Function],
                            "shouldShowInspectButtonMessage": [Function],
                          }
                        }
                        failuresCount={1}
                        featureFlagStoreData={
                          Object {
                            "shadowDialog": true,
                          }
                        }
                      />
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
                "_workInProgressHook": null,
              },
            },
          }
        }
        dialogHandler={
          Object {
            "componentDidMount": [Function],
            "getFailureInfo": [Function],
            "getRuleUrl": [Function],
            "isBackButtonDisabled": [Function],
            "isInspectButtonDisabled": [Function],
            "isNextButtonDisabled": [Function],
            "shouldShowInspectButtonMessage": [Function],
          }
        }
        failuresCount={1}
        featureFlagStoreData={
          Object {
            "shadowDialog": true,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": false, "shadowDialog": true}: verify initial state 1`] = `
Object {
  "canInspect": true,
  "currentRuleIndex": 0,
  "showDialog": true,
  "showInspectMessage": false,
  "userConfigurationStoreData": undefined,
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true, "shadowDialog": false} 1`] = `
<StyledWithResponsiveMode
  dialogContentProps={
    Object {
      "showCloseButton": false,
      "styles": Object {
        "title": "insights-dialog-title",
      },
      "topButtonsProps": Array [
        Object {
          "ariaLabel": "Close",
          "onClick": [Function],
          "onRenderIcon": [Function],
        },
      ],
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    Object {
      "containerClassName": "insights-dialog-main-override insights-dialog-main-container",
      "isBlocking": false,
      "layerProps": Object {
        "hostId": "insights-dialog-layer-host",
        "onLayerDidMount": [Function],
      },
    }
  }
  onDismiss={[Function]}
  title="help"
>
  <div
    className="insights-dialog-content"
  >
    <section
      aria-labelledby="rule-name"
      className="insights-dialog-rule-name"
    >
      <h3
        className="insights-dialog-section-title"
        id="rule-name"
      >
        Rule name
      </h3>
      <NewTabLink
        href="http://extension/help1"
      >
        ruleId
      </NewTabLink>
    </section>
    <section
      aria-labelledby="success-criteria"
      className="insights-dialog-success-criteria"
    >
      <h3
        className="insights-dialog-section-title"
        id="success-criteria"
      >
        Success criterion
      </h3>
      <div>
        <GuidanceLinks
          links={
            Array [
              Object {
                "href": "http://example.com",
                "text": "Guidance Link",
              },
            ]
          }
        />
      </div>
    </section>
    <section
      className="insights-dialog-path-selector-container"
    >
      <h3
        className="insights-dialog-section-title"
      >
        Path
      </h3>
      ruleId
    </section>
    <CommandBar
      currentRuleIndex={0}
      deps={
        Object {
          "browserAdapter": Object {
            "getUrl": [Function],
          },
          "issueDetailsTextGenerator": null,
          "issueFilingActionMessageCreator": null,
          "targetPageActionMessageCreator": Object {
            "copyIssueDetailsClicked": [Function],
          },
          "windowUtils": null,
        }
      }
      devToolsShortcut="shortcut"
      failedRules={
        Object {
          "ruleId": Object {
            "all": Array [],
            "any": Array [],
            "failureSummary": "failureSummary",
            "guidanceLinks": Array [
              Object {
                "href": "http://example.com",
                "text": "Guidance Link",
              },
            ],
            "help": "help",
            "helpUrl": "http://extension/help1",
            "html": "html",
            "id": "id1",
            "none": Array [],
            "ruleId": "ruleId",
            "selector": "selector",
            "status": false,
          },
        }
      }
      onClickCopyIssueDetailsButton={[Function]}
      onClickInspectButton={[Function]}
      shouldShowInspectButtonMessage={[Function]}
    />
    <div
      className="insights-dialog-fix-instruction-container"
    >
      <FixInstructionPanel
        checkType={0}
        checks={Array []}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        renderTitleElement={[Function]}
      />
      <FixInstructionPanel
        checkType={1}
        checks={Array []}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        renderTitleElement={[Function]}
      />
    </div>
    <IssueDetailsNavigationControls
      container={
        DetailsDialog {
          "componentDidMount": [Function],
          "componentWillUnmount": [Function],
          "context": Object {},
          "isBackButtonDisabled": [Function],
          "isInspectButtonDisabled": [Function],
          "isNextButtonDisabled": [Function],
          "onClickBackButton": [Function],
          "onClickInspectButton": [Function],
          "onClickNextButton": [Function],
          "onHideDialog": [Function],
          "onLayoutDidMount": [Function],
          "props": Object {
            "deps": Object {
              "browserAdapter": Object {
                "getUrl": [Function],
              },
              "issueDetailsTextGenerator": null,
              "issueFilingActionMessageCreator": null,
              "targetPageActionMessageCreator": Object {
                "copyIssueDetailsClicked": [Function],
              },
              "windowUtils": null,
            },
            "devToolActionMessageCreator": Object {},
            "devToolStore": Object {},
            "devToolsShortcut": "shortcut",
            "dialogHandler": Object {
              "componentDidMount": [Function],
              "getFailureInfo": [Function],
              "getRuleUrl": [Function],
              "isBackButtonDisabled": [Function],
              "isInspectButtonDisabled": [Function],
              "isNextButtonDisabled": [Function],
              "shouldShowInspectButtonMessage": [Function],
            },
            "elementSelector": "ruleId",
            "failedRules": Object {
              "ruleId": Object {
                "all": Array [],
                "any": Array [],
                "failureSummary": "failureSummary",
                "guidanceLinks": Array [
                  Object {
                    "href": "http://example.com",
                    "text": "Guidance Link",
                  },
                ],
                "help": "help",
                "helpUrl": "http://extension/help1",
                "html": "html",
                "id": "id1",
                "none": Array [],
                "ruleId": "ruleId",
                "selector": "selector",
                "status": false,
              },
            },
            "featureFlagStoreData": Object {
              "shadowDialog": false,
            },
            "target": Array [],
            "userConfigStore": Object {
              "getState": [Function],
            },
          },
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "canInspect": true,
            "currentRuleIndex": 0,
            "showDialog": true,
            "showInspectMessage": false,
            "userConfigurationStoreData": undefined,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_didScheduleRenderPhaseUpdate": false,
              "_dispatcher": Object {
                "readContext": [Function],
                "useCallback": [Function],
                "useContext": [Function],
                "useDebugValue": [Function],
                "useDeferredValue": [Function],
                "useEffect": [Function],
                "useImperativeHandle": [Function],
                "useLayoutEffect": [Function],
                "useMemo": [Function],
                "useReducer": [Function],
                "useRef": [Function],
                "useResponder": [Function],
                "useState": [Function],
                "useTransition": [Function],
              },
              "_element": <DetailsDialog
                deps={
                  Object {
                    "browserAdapter": Object {
                      "getUrl": [Function],
                    },
                    "issueDetailsTextGenerator": null,
                    "issueFilingActionMessageCreator": null,
                    "targetPageActionMessageCreator": Object {
                      "copyIssueDetailsClicked": [Function],
                    },
                    "windowUtils": null,
                  }
                }
                devToolActionMessageCreator={Object {}}
                devToolStore={Object {}}
                devToolsShortcut="shortcut"
                dialogHandler={
                  Object {
                    "componentDidMount": [Function],
                    "getFailureInfo": [Function],
                    "getRuleUrl": [Function],
                    "isBackButtonDisabled": [Function],
                    "isInspectButtonDisabled": [Function],
                    "isNextButtonDisabled": [Function],
                    "shouldShowInspectButtonMessage": [Function],
                  }
                }
                elementSelector="ruleId"
                failedRules={
                  Object {
                    "ruleId": Object {
                      "all": Array [],
                      "any": Array [],
                      "failureSummary": "failureSummary",
                      "guidanceLinks": Array [
                        Object {
                          "href": "http://example.com",
                          "text": "Guidance Link",
                        },
                      ],
                      "help": "help",
                      "helpUrl": "http://extension/help1",
                      "html": "html",
                      "id": "id1",
                      "none": Array [],
                      "ruleId": "ruleId",
                      "selector": "selector",
                      "status": false,
                    },
                  }
                }
                featureFlagStoreData={
                  Object {
                    "shadowDialog": false,
                  }
                }
                target={Array []}
                userConfigStore={
                  Object {
                    "getState": [Function],
                  }
                }
              />,
              "_firstWorkInProgressHook": null,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_isReRender": false,
              "_newState": null,
              "_numberOfReRenders": 0,
              "_renderPhaseUpdates": null,
              "_rendered": <StyledWithResponsiveMode
                dialogContentProps={
                  Object {
                    "showCloseButton": false,
                    "styles": Object {
                      "title": "insights-dialog-title",
                    },
                    "topButtonsProps": Array [
                      Object {
                        "ariaLabel": "Close",
                        "onClick": [Function],
                        "onRenderIcon": [Function],
                      },
                    ],
                    "type": 0,
                  }
                }
                hidden={false}
                modalProps={
                  Object {
                    "containerClassName": "insights-dialog-main-override insights-dialog-main-container",
                    "isBlocking": false,
                    "layerProps": Object {
                      "hostId": "insights-dialog-layer-host",
                      "onLayerDidMount": [Function],
                    },
                  }
                }
                onDismiss={[Function]}
                title="help"
              >
                <div
                  className="insights-dialog-content"
                >
                  <section
                    aria-labelledby="rule-name"
                    className="insights-dialog-rule-name"
                  >
                    <h3
                      className="insights-dialog-section-title"
                      id="rule-name"
                    >
                      Rule name
                    </h3>
                    <NewTabLink
                      href="http://extension/help1"
                    >
                      ruleId
                    </NewTabLink>
                  </section>
                  <section
                    aria-labelledby="success-criteria"
                    className="insights-dialog-success-criteria"
                  >
                    <h3
                      className="insights-dialog-section-title"
                      id="success-criteria"
                    >
                      Success criterion
                    </h3>
                    <div>
                      <GuidanceLinks
                        links={
                          Array [
                            Object {
                              "href": "http://example.com",
                              "text": "Guidance Link",
                            },
                          ]
                        }
                      />
                    </div>
                  </section>
                  <section
                    className="insights-dialog-path-selector-container"
                  >
                    <h3
                      className="insights-dialog-section-title"
                    >
                      Path
                    </h3>
                    ruleId
                  </section>
                  <CommandBar
                    currentRuleIndex={0}
                    deps={
                      Object {
                        "browserAdapter": Object {
                          "getUrl": [Function],
                        },
                        "issueDetailsTextGenerator": null,
                        "issueFilingActionMessageCreator": null,
                        "targetPageActionMessageCreator": Object {
                          "copyIssueDetailsClicked": [Function],
                        },
                        "windowUtils": null,
                      }
                    }
                    devToolsShortcut="shortcut"
                    failedRules={
                      Object {
                        "ruleId": Object {
                          "all": Array [],
                          "any": Array [],
                          "failureSummary": "failureSummary",
                          "guidanceLinks": Array [
                            Object {
                              "href": "http://example.com",
                              "text": "Guidance Link",
                            },
                          ],
                          "help": "help",
                          "helpUrl": "http://extension/help1",
                          "html": "html",
                          "id": "id1",
                          "none": Array [],
                          "ruleId": "ruleId",
                          "selector": "selector",
                          "status": false,
                        },
                      }
                    }
                    onClickCopyIssueDetailsButton={[Function]}
                    onClickInspectButton={[Function]}
                    shouldShowInspectButtonMessage={[Function]}
                  />
                  <div
                    className="insights-dialog-fix-instruction-container"
                  >
                    <FixInstructionPanel
                      checkType={0}
                      checks={Array []}
                      deps={
                        Object {
                          "browserAdapter": Object {
                            "getUrl": [Function],
                          },
                          "issueDetailsTextGenerator": null,
                          "issueFilingActionMessageCreator": null,
                          "targetPageActionMessageCreator": Object {
                            "copyIssueDetailsClicked": [Function],
                          },
                          "windowUtils": null,
                        }
                      }
                      renderTitleElement={[Function]}
                    />
                    <FixInstructionPanel
                      checkType={1}
                      checks={Array []}
                      deps={
                        Object {
                          "browserAdapter": Object {
                            "getUrl": [Function],
                          },
                          "issueDetailsTextGenerator": null,
                          "issueFilingActionMessageCreator": null,
                          "targetPageActionMessageCreator": Object {
                            "copyIssueDetailsClicked": [Function],
                          },
                          "windowUtils": null,
                        }
                      }
                      renderTitleElement={[Function]}
                    />
                  </div>
                  <IssueDetailsNavigationControls
                    container={[Circular]}
                    dialogHandler={
                      Object {
                        "componentDidMount": [Function],
                        "getFailureInfo": [Function],
                        "getRuleUrl": [Function],
                        "isBackButtonDisabled": [Function],
                        "isInspectButtonDisabled": [Function],
                        "isNextButtonDisabled": [Function],
                        "shouldShowInspectButtonMessage": [Function],
                      }
                    }
                    failuresCount={1}
                    featureFlagStoreData={
                      Object {
                        "shadowDialog": false,
                      }
                    }
                  />
                </div>
              </StyledWithResponsiveMode>,
              "_rendering": false,
              "_updater": [Circular],
              "_workInProgressHook": null,
            },
          },
        }
      }
      dialogHandler={
        Object {
          "componentDidMount": [Function],
          "getFailureInfo": [Function],
          "getRuleUrl": [Function],
          "isBackButtonDisabled": [Function],
          "isInspectButtonDisabled": [Function],
          "isNextButtonDisabled": [Function],
          "shouldShowInspectButtonMessage": [Function],
        }
      }
      failuresCount={1}
      featureFlagStoreData={
        Object {
          "shadowDialog": false,
        }
      }
    />
  </div>
</StyledWithResponsiveMode>
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true, "shadowDialog": false}: verify close button for non shadow dom 1`] = `<CancelIcon />`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true, "shadowDialog": false}: verify initial state 1`] = `
Object {
  "canInspect": true,
  "currentRuleIndex": 0,
  "showDialog": true,
  "showInspectMessage": false,
  "userConfigurationStoreData": undefined,
}
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true, "shadowDialog": true} 1`] = `
<div
  className="insights-dialog-main-override-shadow"
  style={
    Object {
      "visibility": "visible",
    }
  }
>
  <div
    className="insights-dialog-container"
  >
    <div
      className="insights-dialog-header"
    >
      <p
        className="ms-Dialog-title insights-dialog-title"
      >
        help
      </p>
      <div
        className="ms-Dialog-topButton"
      >
        <button
          aria-label="Close"
          className="ms-Dialog-button ms-Dialog-button--close ms-Button ms-Button--icon insights-dialog-close"
          data-is-focusable="true"
          type="button"
        >
          <span
            className="ms-button-flex-container"
          >
            <CancelIcon />
          </span>
        </button>
      </div>
    </div>
    <div
      className="insights-dialog-content"
    >
      <section
        aria-labelledby="rule-name"
        className="insights-dialog-rule-name"
      >
        <h3
          className="insights-dialog-section-title"
          id="rule-name"
        >
          Rule name
        </h3>
        <NewTabLink
          href="http://extension/help1"
        >
          ruleId
        </NewTabLink>
      </section>
      <section
        aria-labelledby="success-criteria"
        className="insights-dialog-success-criteria"
      >
        <h3
          className="insights-dialog-section-title"
          id="success-criteria"
        >
          Success criterion
        </h3>
        <div>
          <GuidanceLinks
            links={
              Array [
                Object {
                  "href": "http://example.com",
                  "text": "Guidance Link",
                },
              ]
            }
          />
        </div>
      </section>
      <section
        className="insights-dialog-path-selector-container"
      >
        <h3
          className="insights-dialog-section-title"
        >
          Path
        </h3>
        ruleId
      </section>
      <CommandBar
        currentRuleIndex={0}
        deps={
          Object {
            "browserAdapter": Object {
              "getUrl": [Function],
            },
            "issueDetailsTextGenerator": null,
            "issueFilingActionMessageCreator": null,
            "targetPageActionMessageCreator": Object {
              "copyIssueDetailsClicked": [Function],
            },
            "windowUtils": null,
          }
        }
        devToolsShortcut="shortcut"
        failedRules={
          Object {
            "ruleId": Object {
              "all": Array [],
              "any": Array [],
              "failureSummary": "failureSummary",
              "guidanceLinks": Array [
                Object {
                  "href": "http://example.com",
                  "text": "Guidance Link",
                },
              ],
              "help": "help",
              "helpUrl": "http://extension/help1",
              "html": "html",
              "id": "id1",
              "none": Array [],
              "ruleId": "ruleId",
              "selector": "selector",
              "status": false,
            },
          }
        }
        onClickCopyIssueDetailsButton={[Function]}
        onClickInspectButton={null}
        shouldShowInspectButtonMessage={[Function]}
      />
      <div
        className="insights-dialog-fix-instruction-container"
      >
        <FixInstructionPanel
          checkType={0}
          checks={Array []}
          deps={
            Object {
              "browserAdapter": Object {
                "getUrl": [Function],
              },
              "issueDetailsTextGenerator": null,
              "issueFilingActionMessageCreator": null,
              "targetPageActionMessageCreator": Object {
                "copyIssueDetailsClicked": [Function],
              },
              "windowUtils": null,
            }
          }
          renderTitleElement={[Function]}
        />
        <FixInstructionPanel
          checkType={1}
          checks={Array []}
          deps={
            Object {
              "browserAdapter": Object {
                "getUrl": [Function],
              },
              "issueDetailsTextGenerator": null,
              "issueFilingActionMessageCreator": null,
              "targetPageActionMessageCreator": Object {
                "copyIssueDetailsClicked": [Function],
              },
              "windowUtils": null,
            }
          }
          renderTitleElement={[Function]}
        />
      </div>
      <IssueDetailsNavigationControls
        container={
          DetailsDialog {
            "componentDidMount": [Function],
            "componentWillUnmount": [Function],
            "context": Object {},
            "isBackButtonDisabled": [Function],
            "isInspectButtonDisabled": [Function],
            "isNextButtonDisabled": [Function],
            "onClickBackButton": [Function],
            "onClickInspectButton": [Function],
            "onClickNextButton": [Function],
            "onHideDialog": [Function],
            "onLayoutDidMount": [Function],
            "props": Object {
              "deps": Object {
                "browserAdapter": Object {
                  "getUrl": [Function],
                },
                "issueDetailsTextGenerator": null,
                "issueFilingActionMessageCreator": null,
                "targetPageActionMessageCreator": Object {
                  "copyIssueDetailsClicked": [Function],
                },
                "windowUtils": null,
              },
              "devToolActionMessageCreator": Object {},
              "devToolStore": Object {},
              "devToolsShortcut": "shortcut",
              "dialogHandler": Object {
                "componentDidMount": [Function],
                "getFailureInfo": [Function],
                "getRuleUrl": [Function],
                "isBackButtonDisabled": [Function],
                "isInspectButtonDisabled": [Function],
                "isNextButtonDisabled": [Function],
                "shouldShowInspectButtonMessage": [Function],
              },
              "elementSelector": "ruleId",
              "failedRules": Object {
                "ruleId": Object {
                  "all": Array [],
                  "any": Array [],
                  "failureSummary": "failureSummary",
                  "guidanceLinks": Array [
                    Object {
                      "href": "http://example.com",
                      "text": "Guidance Link",
                    },
                  ],
                  "help": "help",
                  "helpUrl": "http://extension/help1",
                  "html": "html",
                  "id": "id1",
                  "none": Array [],
                  "ruleId": "ruleId",
                  "selector": "selector",
                  "status": false,
                },
              },
              "featureFlagStoreData": Object {
                "shadowDialog": true,
              },
              "target": Array [],
              "userConfigStore": Object {
                "getState": [Function],
              },
            },
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "canInspect": true,
              "currentRuleIndex": 0,
              "showDialog": true,
              "showInspectMessage": false,
              "userConfigurationStoreData": undefined,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_didScheduleRenderPhaseUpdate": false,
                "_dispatcher": Object {
                  "readContext": [Function],
                  "useCallback": [Function],
                  "useContext": [Function],
                  "useDebugValue": [Function],
                  "useDeferredValue": [Function],
                  "useEffect": [Function],
                  "useImperativeHandle": [Function],
                  "useLayoutEffect": [Function],
                  "useMemo": [Function],
                  "useReducer": [Function],
                  "useRef": [Function],
                  "useResponder": [Function],
                  "useState": [Function],
                  "useTransition": [Function],
                },
                "_element": <DetailsDialog
                  deps={
                    Object {
                      "browserAdapter": Object {
                        "getUrl": [Function],
                      },
                      "issueDetailsTextGenerator": null,
                      "issueFilingActionMessageCreator": null,
                      "targetPageActionMessageCreator": Object {
                        "copyIssueDetailsClicked": [Function],
                      },
                      "windowUtils": null,
                    }
                  }
                  devToolActionMessageCreator={Object {}}
                  devToolStore={Object {}}
                  devToolsShortcut="shortcut"
                  dialogHandler={
                    Object {
                      "componentDidMount": [Function],
                      "getFailureInfo": [Function],
                      "getRuleUrl": [Function],
                      "isBackButtonDisabled": [Function],
                      "isInspectButtonDisabled": [Function],
                      "isNextButtonDisabled": [Function],
                      "shouldShowInspectButtonMessage": [Function],
                    }
                  }
                  elementSelector="ruleId"
                  failedRules={
                    Object {
                      "ruleId": Object {
                        "all": Array [],
                        "any": Array [],
                        "failureSummary": "failureSummary",
                        "guidanceLinks": Array [
                          Object {
                            "href": "http://example.com",
                            "text": "Guidance Link",
                          },
                        ],
                        "help": "help",
                        "helpUrl": "http://extension/help1",
                        "html": "html",
                        "id": "id1",
                        "none": Array [],
                        "ruleId": "ruleId",
                        "selector": "selector",
                        "status": false,
                      },
                    }
                  }
                  featureFlagStoreData={
                    Object {
                      "shadowDialog": true,
                    }
                  }
                  target={Array []}
                  userConfigStore={
                    Object {
                      "getState": [Function],
                    }
                  }
                />,
                "_firstWorkInProgressHook": null,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_isReRender": false,
                "_newState": null,
                "_numberOfReRenders": 0,
                "_renderPhaseUpdates": null,
                "_rendered": <div
                  className="insights-dialog-main-override-shadow"
                  style={
                    Object {
                      "visibility": "visible",
                    }
                  }
                >
                  <div
                    className="insights-dialog-container"
                  >
                    <div
                      className="insights-dialog-header"
                    >
                      <p
                        className="ms-Dialog-title insights-dialog-title"
                      >
                        help
                      </p>
                      <div
                        className="ms-Dialog-topButton"
                      >
                        <button
                          aria-label="Close"
                          className="ms-Dialog-button ms-Dialog-button--close ms-Button ms-Button--icon insights-dialog-close"
                          data-is-focusable="true"
                          type="button"
                        >
                          <span
                            className="ms-button-flex-container"
                          >
                            <CancelIcon />
                          </span>
                        </button>
                      </div>
                    </div>
                    <div
                      className="insights-dialog-content"
                    >
                      <section
                        aria-labelledby="rule-name"
                        className="insights-dialog-rule-name"
                      >
                        <h3
                          className="insights-dialog-section-title"
                          id="rule-name"
                        >
                          Rule name
                        </h3>
                        <NewTabLink
                          href="http://extension/help1"
                        >
                          ruleId
                        </NewTabLink>
                      </section>
                      <section
                        aria-labelledby="success-criteria"
                        className="insights-dialog-success-criteria"
                      >
                        <h3
                          className="insights-dialog-section-title"
                          id="success-criteria"
                        >
                          Success criterion
                        </h3>
                        <div>
                          <GuidanceLinks
                            links={
                              Array [
                                Object {
                                  "href": "http://example.com",
                                  "text": "Guidance Link",
                                },
                              ]
                            }
                          />
                        </div>
                      </section>
                      <section
                        className="insights-dialog-path-selector-container"
                      >
                        <h3
                          className="insights-dialog-section-title"
                        >
                          Path
                        </h3>
                        ruleId
                      </section>
                      <CommandBar
                        currentRuleIndex={0}
                        deps={
                          Object {
                            "browserAdapter": Object {
                              "getUrl": [Function],
                            },
                            "issueDetailsTextGenerator": null,
                            "issueFilingActionMessageCreator": null,
                            "targetPageActionMessageCreator": Object {
                              "copyIssueDetailsClicked": [Function],
                            },
                            "windowUtils": null,
                          }
                        }
                        devToolsShortcut="shortcut"
                        failedRules={
                          Object {
                            "ruleId": Object {
                              "all": Array [],
                              "any": Array [],
                              "failureSummary": "failureSummary",
                              "guidanceLinks": Array [
                                Object {
                                  "href": "http://example.com",
                                  "text": "Guidance Link",
                                },
                              ],
                              "help": "help",
                              "helpUrl": "http://extension/help1",
                              "html": "html",
                              "id": "id1",
                              "none": Array [],
                              "ruleId": "ruleId",
                              "selector": "selector",
                              "status": false,
                            },
                          }
                        }
                        onClickCopyIssueDetailsButton={[Function]}
                        onClickInspectButton={null}
                        shouldShowInspectButtonMessage={[Function]}
                      />
                      <div
                        className="insights-dialog-fix-instruction-container"
                      >
                        <FixInstructionPanel
                          checkType={0}
                          checks={Array []}
                          deps={
                            Object {
                              "browserAdapter": Object {
                                "getUrl": [Function],
                              },
                              "issueDetailsTextGenerator": null,
                              "issueFilingActionMessageCreator": null,
                              "targetPageActionMessageCreator": Object {
                                "copyIssueDetailsClicked": [Function],
                              },
                              "windowUtils": null,
                            }
                          }
                          renderTitleElement={[Function]}
                        />
                        <FixInstructionPanel
                          checkType={1}
                          checks={Array []}
                          deps={
                            Object {
                              "browserAdapter": Object {
                                "getUrl": [Function],
                              },
                              "issueDetailsTextGenerator": null,
                              "issueFilingActionMessageCreator": null,
                              "targetPageActionMessageCreator": Object {
                                "copyIssueDetailsClicked": [Function],
                              },
                              "windowUtils": null,
                            }
                          }
                          renderTitleElement={[Function]}
                        />
                      </div>
                      <IssueDetailsNavigationControls
                        container={[Circular]}
                        dialogHandler={
                          Object {
                            "componentDidMount": [Function],
                            "getFailureInfo": [Function],
                            "getRuleUrl": [Function],
                            "isBackButtonDisabled": [Function],
                            "isInspectButtonDisabled": [Function],
                            "isNextButtonDisabled": [Function],
                            "shouldShowInspectButtonMessage": [Function],
                          }
                        }
                        failuresCount={1}
                        featureFlagStoreData={
                          Object {
                            "shadowDialog": true,
                          }
                        }
                      />
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
                "_workInProgressHook": null,
              },
            },
          }
        }
        dialogHandler={
          Object {
            "componentDidMount": [Function],
            "getFailureInfo": [Function],
            "getRuleUrl": [Function],
            "isBackButtonDisabled": [Function],
            "isInspectButtonDisabled": [Function],
            "isNextButtonDisabled": [Function],
            "shouldShowInspectButtonMessage": [Function],
          }
        }
        failuresCount={1}
        featureFlagStoreData={
          Object {
            "shadowDialog": true,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`DetailsDialog renders with: {"isDevToolsOpen": true, "shadowDialog": true}: verify initial state 1`] = `
Object {
  "canInspect": true,
  "currentRuleIndex": 0,
  "showDialog": true,
  "showInspectMessage": false,
  "userConfigurationStoreData": undefined,
}
`;
