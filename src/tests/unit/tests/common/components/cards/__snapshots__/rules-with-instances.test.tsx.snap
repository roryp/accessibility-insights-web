// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RulesWithInstances renders 1`] = `
<div
  className="ruleDetailsGroup"
  data-automation-id="rule-details-group"
>
  <CollapsibleControlStub
    buttonAriaLabel="some-rule 1 Passed sample-description"
    containerAutomationId="cards-rule-group"
    containerClassName="collapsibleRuleDetailsGroup"
    content={
      <RuleContent
        deps={
          Object {
            "collapsibleControl": [Function],
          }
        }
        fixInstructionProcessor={
          proxy {
            "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
            "backgroundColorText": "background color: ",
            "backgroundRegExp": /background color: \\(#\\[0-9a-f\\]\\{6\\}\\)/i,
            "colorValueMatcher": "(#[0-9a-f]{6})",
            "foregroundColorText": "foreground color: ",
            "foregroundRegExp": /foreground color: \\(#\\[0-9a-f\\]\\{6\\}\\)/i,
          }
        }
        rule={
          Object {
            "description": "sample-description",
            "guidance": Array [
              Object {
                "href": "sample-guidance-href",
                "text": "sample-guidance-text",
              },
            ],
            "id": "some-rule",
            "nodes": Array [
              Object {
                "descriptors": Object {
                  "snippet": "this is a sample snippet",
                },
                "identifiers": Object {
                  "conciseName": "body img",
                  "css-selector": "body img",
                  "identifier": "body img",
                },
                "resolution": Object {
                  "how-to-fix-web": Object {
                    "all": Array [],
                    "any": Array [
                      "Element does not have an alt attribute",
                      "aria-label attribute does not exist or is empty",
                      "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                    ],
                    "none": Array [],
                  },
                  "howToFixSummary": "sample how to fix summary",
                },
                "ruleId": "image-alt",
                "status": "fail",
                "uid": "some-guid-here",
              },
            ],
            "url": "sample-url",
          }
        }
        targetAppInfo={
          Object {
            "name": "app",
          }
        }
        userConfigurationStoreData={null}
      />
    }
    deps={
      Object {
        "collapsibleControl": [Function],
      }
    }
    header={
      <MinimalRuleHeader
        outcomeType="pass"
        rule={
          Object {
            "description": "sample-description",
            "guidance": Array [
              Object {
                "href": "sample-guidance-href",
                "text": "sample-guidance-text",
              },
            ],
            "id": "some-rule",
            "nodes": Array [
              Object {
                "descriptors": Object {
                  "snippet": "this is a sample snippet",
                },
                "identifiers": Object {
                  "conciseName": "body img",
                  "css-selector": "body img",
                  "identifier": "body img",
                },
                "resolution": Object {
                  "how-to-fix-web": Object {
                    "all": Array [],
                    "any": Array [
                      "Element does not have an alt attribute",
                      "aria-label attribute does not exist or is empty",
                      "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
                    ],
                    "none": Array [],
                  },
                  "howToFixSummary": "sample how to fix summary",
                },
                "ruleId": "image-alt",
                "status": "fail",
                "uid": "some-guid-here",
              },
            ],
            "url": "sample-url",
          }
        }
      />
    }
    headingLevel={3}
    id="some-rule"
  />
</div>
`;
